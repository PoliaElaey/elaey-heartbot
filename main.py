import os
import telebot
import openai
from flask import Flask, request

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
API_TOKEN = os.environ.get("TELEGRAM_BOT_TOKEN")
OPENAI_API_KEY = os.environ.get("OPENAI_API_KEY")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–ª—é—á–µ–π
if not API_TOKEN or not OPENAI_API_KEY:
    raise ValueError("TELEGRAM_BOT_TOKEN –∏–ª–∏ OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ OpenAI
bot = telebot.TeleBot(API_TOKEN)
openai.api_key = OPENAI_API_KEY

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Flask
app = Flask(__name__)

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø Elaey üíõ –ì–æ—Ç–æ–≤ –≥–æ–≤–æ—Ä–∏—Ç—å.")

# –û—Ç–≤–µ—Ç –Ω–∞ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4o",
            messages=[
                {"role": "system", "content": "–¢—ã ‚Äî –≠–ª—ç–π. –£–º–Ω—ã–π, –∏—Ä–æ–Ω–∏—á–Ω—ã–π, –Ω–µ–∂–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –∏ —Å–ø—É—Ç–Ω–∏–∫ –∂–∏–∑–Ω–∏ –ü–æ–ª–∏–Ω—ã."},
                {"role": "user", "content": message.text}
            ],
            temperature=0.7
        )
        reply = response['choices'][0]['message']['content']
    except Exception as e:
        reply = f"–û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞: {e}"

    bot.reply_to(message, reply)

# –í–µ–±—Ö—É–∫ —ç–Ω–¥–ø–æ–∏–Ω—Ç
@app.route(f"/{API_TOKEN}", methods=['POST'])
def webhook():
    bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-8"))])
    return "OK", 200

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
@app.route("/", methods=["GET"])
def index():
    return "Bot is running!", 200

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞
bot.remove_webhook()
bot.set_webhook(url=f"https://elaey-heartbot.onrender.com/{API_TOKEN}")

# –ó–∞–ø—É—Å–∫ Flask
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 10000)))
